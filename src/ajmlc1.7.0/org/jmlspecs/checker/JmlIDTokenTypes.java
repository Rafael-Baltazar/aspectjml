// Generated from JmlID.t
package org.jmlspecs.checker;

public interface JmlIDTokenTypes extends org.jmlspecs.checker.JmlExprIDTokenTypes {
  int	LITERAL_abrupt_behavior = 169;
  int	LITERAL_abrupt_behaviour = 170;
  int	LITERAL_accessible = 171;
  int	LITERAL_accessible_redundantly = 172;
  int	LITERAL_also = 173;
  int	LITERAL_assert_redundantly = 174;
  int	LITERAL_assignable = 175;
  int	LITERAL_assignable_redundantly = 176;
  int	LITERAL_assume = 177;
  int	LITERAL_assume_redundantly = 178;
  int	LITERAL_axiom = 179;
  int	LITERAL_behavior = 180;
  int	LITERAL_behaviour = 181;
  int	LITERAL_breaks = 182;
  int	LITERAL_breaks_redundantly = 183;
  int	LITERAL_callable = 184;
  int	LITERAL_callable_redundantly = 185;
  int	LITERAL_captures = 186;
  int	LITERAL_captures_redundantly = 187;
  int	LITERAL_choose = 188;
  int	LITERAL_choose_if = 189;
  int	LITERAL_code = 190;
  int	LITERAL_code_bigint_math = 191;
  int	LITERAL_code_contract = 192;
  int	LITERAL_code_java_math = 193;
  int	LITERAL_code_safe_math = 194;
  int	LITERAL_constraint = 195;
  int	LITERAL_constraint_redundantly = 196;
  int	LITERAL_constructor = 197;
  int	LITERAL_continues = 198;
  int	LITERAL_continues_redundantly = 199;
  int	LITERAL_debug = 200;
  int	LITERAL_decreases = 201;
  int	LITERAL_decreases_redundantly = 202;
  int	LITERAL_decreasing = 203;
  int	LITERAL_decreasing_redundantly = 204;
  int	LITERAL_diverges = 205;
  int	LITERAL_diverges_redundantly = 206;
  int	LITERAL_duration = 207;
  int	LITERAL_duration_redundantly = 208;
  int	LITERAL_ensures = 209;
  int	LITERAL_ensures_redundantly = 210;
  int	LITERAL_example = 211;
  int	LITERAL_exceptional_behavior = 212;
  int	LITERAL_exceptional_behaviour = 213;
  int	LITERAL_exceptional_example = 214;
  int	LITERAL_exsures = 215;
  int	LITERAL_exsures_redundantly = 216;
  int	LITERAL_extract = 217;
  int	LITERAL_field = 218;
  int	LITERAL_forall = 219;
  int	LITERAL_for_example = 220;
  int	LITERAL_ghost = 221;
  int	LITERAL_helper = 222;
  int	LITERAL_hence_by = 223;
  int	LITERAL_hence_by_redundantly = 224;
  int	LITERAL_implies_that = 225;
  int	LITERAL_in = 226;
  int	LITERAL_in_redundantly = 227;
  int	LITERAL_initializer = 228;
  int	LITERAL_initially = 229;
  int	LITERAL_instance = 230;
  int	LITERAL_invariant = 231;
  int	LITERAL_invariant_redundantly = 232;
  int	LITERAL_loop_invariant = 233;
  int	LITERAL_loop_invariant_redundantly = 234;
  int	LITERAL_maintaining = 235;
  int	LITERAL_maintaining_redundantly = 236;
  int	LITERAL_maps = 237;
  int	LITERAL_maps_redundantly = 238;
  int	LITERAL_measured_by = 239;
  int	LITERAL_measured_by_redundantly = 240;
  int	LITERAL_method = 241;
  int	LITERAL_model = 242;
  int	LITERAL_model_program = 243;
  int	LITERAL_modifiable = 244;
  int	LITERAL_modifiable_redundantly = 245;
  int	LITERAL_modifies = 246;
  int	LITERAL_modifies_redundantly = 247;
  int	LITERAL_monitored = 248;
  int	LITERAL_monitors_for = 249;
  int	LITERAL_non_null = 250;
  int	LITERAL_non_null_by_default = 251;
  int	LITERAL_normal_behavior = 252;
  int	LITERAL_normal_behaviour = 253;
  int	LITERAL_normal_example = 254;
  int	LITERAL_nullable = 255;
  int	LITERAL_nullable_by_default = 256;
  int	LITERAL_old = 257;
  int	LITERAL_or = 258;
  int	LITERAL_post = 259;
  int	LITERAL_post_redundantly = 260;
  int	LITERAL_pre = 261;
  int	LITERAL_pre_redundantly = 262;
  int	LITERAL_query = 263;
  int	LITERAL_readable = 264;
  int	LITERAL_refine = 265;
  int	LITERAL_refines = 266;
  int	LITERAL_refining = 267;
  int	LITERAL_represents = 268;
  int	LITERAL_represents_redundantly = 269;
  int	LITERAL_requires = 270;
  int	LITERAL_requires_redundantly = 271;
  int	LITERAL_returns = 272;
  int	LITERAL_returns_redundantly = 273;
  int	LITERAL_secret = 274;
  int	LITERAL_set = 275;
  int	LITERAL_signals = 276;
  int	LITERAL_signals_only = 277;
  int	LITERAL_signals_only_redundantly = 278;
  int	LITERAL_signals_redundantly = 279;
  int	LITERAL_spec_bigint_math = 280;
  int	LITERAL_spec_java_math = 281;
  int	LITERAL_spec_protected = 282;
  int	LITERAL_spec_public = 283;
  int	LITERAL_spec_safe_math = 284;
  int	LITERAL_static_initializer = 285;
  int	LITERAL_uninitialized = 286;
  int	LITERAL_unreachable = 287;
  int	LITERAL_weakly = 288;
  int	LITERAL_when = 289;
  int	LITERAL_when_redundantly = 290;
  int	LITERAL_working_space = 291;
  int	LITERAL_working_space_redundantly = 292;
  int	LITERAL_writable = 293;
  int	INFORMAL_DESC = 294;
  int	IMPLIES = 295;
  int	BACKWARD_IMPLIES = 296;
  int	EQUIV = 297;
  int	NOT_EQUIV = 298;
  int	R_ARROW = 299;
  int	L_ARROW = 300;
  int	SUBTYPE_OF = 301;
  int	LCURLY_VBAR = 302;
  int	VBAR_RCURLY = 303;
  int	AFFIRM = 304;
}
